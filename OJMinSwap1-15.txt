package zx.com.first;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class MinSwap {
    public static int getMinSwap(int []nums){
        int []temp = Arrays.copyOfRange(nums,0,nums.length);
        Arrays.sort(temp);
        Map<Integer,Integer> map = new HashMap<>();
        for (int i=0;i<nums.length;i++) map.put(temp[i],i);//记录每个数正确的位置
        boolean[]isVisited = new boolean[temp.length];
        for(int i=0;i<nums.length;i++){
            if(nums[i]==temp[i]) isVisited[i] = true; //判断哪些位置的元素是摆放正确的
        }
        int loops = 0;
        for(int i=0;i<nums.length;i++){
            if(!isVisited[i]){ //在nums中，位置i上摆放的元素不正确，依据map，将其放在正确位置上
                int j=i;
                while(!isVisited[j]){
                    isVisited[j] = true; //该元素找到了正确的位置 但是原来nums[j]的元素被交换了回去 isVisited是针对nums数组的（乱序）
                    j = map.get(nums[j]);
                }
                loops++;
            }
        }
        return nums.length-loops;

    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int T = scanner.nextInt();
        for (int i=0;i<T;i++){
            int N = scanner.nextInt();
            int []nums = new int[N];
            for(int j=0;j<N;j++){
                nums[j] = scanner.nextInt();
            }
            System.out.println(getMinSwap(nums));
        }
    }
}

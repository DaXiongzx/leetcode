package ZX.leetcode.no5;

public class Solution {
	public static boolean isPalindrome(String s) {
		//int length = s.length();
		int left = 0;
		int right = s.length()-1;
		while(left<right) {
			if(s.charAt(left)!=s.charAt(right)) 
				return false;
			left++;
			right--;
		}
		return true;
	}
	public static String longestPalindrome(String s) {
		if(isPalindrome(s)) return s;
		if(s.length()<2) return s;
		String str = s.substring(0, 1);
		System.out.println("length: "+s.length());
		int maxLength = 1;
		for(int i=0;i<s.length();i++) {
			for(int j=i+1;j<=s.length();j++) {
				System.out.println("j: "+j);
				System.out.println("subString: "+s.substring(i, j));
				if(isPalindrome(s.substring(i, j))) {
					if(j-i>maxLength) {
						str = s.substring(i,j);
						System.out.println("str: "+str);
						maxLength = j-i;
					}
				}
				
			}
		}
		return str;
    }
	public static void main(String[] args) {
		String s = "bb";
		System.out.println(longestPalindrome(s));
	}
}
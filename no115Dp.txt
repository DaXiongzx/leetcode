package ZX.leetcode.no115;

public class Solution {
	public static int helper(String s,String t,int i,int j,int [][]dp) {
		if(j<0) return 1;
		else if(i<0) return 0;
		else if(dp[i][j]!=-1) return dp[i][j];
		else {
			if(s.charAt(i)==t.charAt(j)) dp[i][j] = helper(s,t,i-1,j-1,dp)+helper(s,t,i-1,j,dp);
			else dp[i][j] = helper(s,t,i-1,j,dp);
		}
		return dp[i][j];
		
	}
	public int numDistinct(String s, String t) {
		int sLen = s.length(),tLen = t.length();
		if(sLen<1) return 0;
		int [][]dp = new int[sLen][tLen];
		for(int i=0;i<sLen;i++) {
			for(int j=0;j<tLen;j++) {
				dp[i][j]=-1;
			}
		}
		helper(s,t,sLen-1,tLen-1,dp);
		return dp[sLen-1][tLen-1];

	}

}
